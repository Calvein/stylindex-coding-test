{"version":3,"sources":["serviceWorker.js","Type/index.js","Loader/index.js","Pokemon/Content/index.js","Pokemon/index.js","PokemonList/index.js","App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","TYPES","Normal","light","dark","Fire","Fighting","Water","Flying","Grass","Poison","Electric","Ground","Psychic","Rock","Ice","Bug","Dragon","Ghost","Dark","Steel","Fairy","Wrapper","styled","span","_templateObject","_ref","_ref2","Type","_ref3","className","of","as","react_default","a","createElement","Object","assign","loading","keyframes","Loader_templateObject","Loader","div","_templateObject2","sample","Content_templateObject","border","Header","header","Content_templateObject2","PrevNext","Link","_templateObject3","PrevPokemon","_templateObject4","NextPokemon","_templateObject5","Content","_templateObject6","Id","_templateObject7","Images","_templateObject8","Image","img","_templateObject9","Evolution","_templateObject10","EvolutionSeparator","_templateObject11","EvolutionImage","_templateObject12","Stats","_templateObject13","Types","_templateObject14","TypeList","_templateObject15","Attacks","table","_templateObject16","AttacksTitle","caption","_templateObject17","Attack","tr","_templateObject18","AttackName","td","_templateObject19","AttackDamage","_templateObject20","color","AttackType","_templateObject21","formatSize","size","parseFloat","minimum","maximum","toFixed","toString","PokemonContent","_ref4","isLoading","pokemon","prevPokemon","nextPokemon","Content_Wrapper","src_Loader","types","to","concat","name","classification","id","src","image","alt","evolutions","map","evolution","key","react_router_dom","weight","height","maxCP","maxHP","type","src_Type","resistant","weaknesses","toConsumableArray","attacks","fast","special","attack","damage","GET_POKEMON","gql","Pokemon_templateObject","Backdrop","animated","Pokemon_templateObject2","Pokemon_templateObject3","withRouter","pokemonNames","history","backdropStyle","useSpring","opacity","from","contentStyle","transform","_useQuery","useQuery","variables","params","data","refetching","pokemonIndex","parseInt","number","useEffect","document","body","style","overflow","keydown","e","keyCode","push","addEventListener","removeEventListener","Fragment","src_Pokemon_Content","Pokemon_Content","GET_POKEMONS","PokemonList_templateObject","Title","h1","PokemonList_templateObject2","List","PokemonList_templateObject3","Item","PokemonList_templateObject4","color1","color2","PokemonList_templateObject5","PokemonList_templateObject6","Name","PokemonList_templateObject7","PokemonList_templateObject8","PokemonList_templateObject9","MoreInfoLink","PokemonList_templateObject10","PokemonList","_ref5","first","pokemons","_ref6","PokemonList_Wrapper","type1","type2","PokemonList_Id","PokemonList_Image","PokemonList_Stats","PokemonList_Types","react_router","path","render","routeProps","src_Pokemon","App","basename","process","core_browser_esm","styles","css","App_templateObject","component","client","ApolloClient","uri","react_common_esm","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc850429.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nexport const TYPES = {\n  Normal: {\n    light: 'rgb(168, 168, 120)',\n    dark: 'rgb(109, 109, 78)',\n  },\n  Fire: {\n    light: 'rgb(240, 128, 48)',\n    dark: 'rgb(156, 83, 31)',\n  },\n  Fighting: {\n    light: 'rgb(192, 48, 40)',\n    dark: 'rgb(125, 31, 26)',\n  },\n  Water: {\n    light: 'rgb(104, 144, 240)',\n    dark: 'rgb(68, 94, 156)',\n  },\n  Flying: {\n    light: 'rgb(168, 144, 240)',\n    dark: 'rgb(109, 94, 156)',\n  },\n  Grass: {\n    light: 'rgb(120, 200, 80)',\n    dark: 'rgb(78, 130, 52)',\n  },\n  Poison: {\n    light: 'rgb(160, 64, 160)',\n    dark: 'rgb(104, 42, 104)',\n  },\n  Electric: {\n    light: 'rgb(248, 208, 48)',\n    dark: 'rgb(161, 135, 31)',\n  },\n  Ground: {\n    light: 'rgb(224, 192, 104)',\n    dark: 'rgb(146, 125, 68)',\n  },\n  Psychic: {\n    light: 'rgb(248, 88, 136)',\n    dark: 'rgb(161, 57, 89)',\n  },\n  Rock: {\n    light: 'rgb(184, 160, 56)',\n    dark: 'rgb(120, 104, 36)',\n  },\n  Ice: {\n    light: 'rgb(152, 216, 216)',\n    dark: 'rgb(99, 141, 141)',\n  },\n  Bug: {\n    light: 'rgb(168, 184, 32)',\n    dark: 'rgb(109, 120, 21)',\n  },\n  Dragon: {\n    light: 'rgb(112, 56, 248)',\n    dark: 'rgb(73, 36, 161)',\n  },\n  Ghost: {\n    light: 'rgb(112, 88, 152)',\n    dark: 'rgb(73, 57, 99)',\n  },\n  Dark: {\n    light: 'rgb(112, 88, 72)',\n    dark: 'rgb(73, 57, 47)',\n  },\n  Steel: {\n    light: 'rgb(184, 184, 208)',\n    dark: 'rgb(120, 120, 135)',\n  },\n  Fairy: {\n    light: 'rgb(238, 153, 172)',\n    dark: 'rgb(155, 100, 112)',\n  },\n}\n\nconst Wrapper = styled.span`\n  padding: 2px 6px;\n  margin: 0 2px;\n  border: 1px solid ${({ dark }) => dark};\n  border-radius: 3px;\n  background: ${({ light }) => light};\n  font-size: 12px;\n  font-weight: bold;\n  color: #fff;\n`\n\nconst Type = ({ className, of, as }) => (\n  <Wrapper {...TYPES[of]} className={className} as={as}>\n    {of}\n  </Wrapper>\n)\n\nType.propTypes = {\n  className: PropTypes.string,\n  of: PropTypes.oneOf(Object.keys(TYPES)).isRequired,\n  as: PropTypes.node,\n}\nexport default Type\n","import { keyframes } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport sample from 'lodash/sample'\n\nimport { TYPES } from '../Type'\n\nconst loading = keyframes`\n  0% {\n    transform: translate(-50%, -50%) rotate(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotate(720deg);\n  }\n`\n\nconst Loader = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 48px;\n  height: 48px;\n  border: 8px solid;\n  border-color: ${sample(TYPES).light} #ddd #ddd #ddd;\n  border-radius: 50%;\n  animation: ${loading} 2s infinite;\n`\n\nexport default Loader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport styled from '@emotion/styled'\n\nimport Loader from '../../Loader'\nimport Type, { TYPES } from '../../Type'\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: 100px 1fr;\n  border: solid ${({ border }) => border || 'transparent'};\n  border-width: 4px 4px 0 4px;\n  border-radius: 5px 5px 0 0;\n  background: #fff;\n  height: 100%;\n`\n\nconst Header = styled.header`\n  position: relative;\n  padding: 16px 0;\n  border-bottom: 4px solid ${({ border }) => border};\n  text-align: center;\n`\n\nconst PrevNext = styled(Link)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n`\nconst PrevPokemon = styled(PrevNext)`\n  left: 16px;\n`\nconst NextPokemon = styled(PrevNext)`\n  right: 16px;\n`\n\nconst Content = styled.div`\n  padding: 16px;\n  font-size: 14px;\n  overflow: auto;\n`\n\nconst Id = styled.div`\n  font-size: 10px;\n`\n\nconst Images = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`\nconst Image = styled.img`\n  height: 250px;\n`\n\nconst Evolution = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst EvolutionSeparator = styled.div`\n  margin: 0 32px;\n  font-size: 48px;\n`\nconst EvolutionImage = styled.img`\n  height: 125px;\n`\n\nconst Stats = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Types = styled.div`\n  margin: 16px 0;\n  font-weight: bold;\n`\nconst TypeList = styled.div`\n  margin-top: 4px;\n`\n\nconst Attacks = styled.table``\nconst AttacksTitle = styled.caption`\n  font-size: 18px;\n  text-align: left;\n  font-weight: bold;\n`\nconst Attack = styled.tr``\nconst AttackName = styled.td`\n  padding-right: 32px;\n`\nconst AttackDamage = styled.td`\n  padding: 0 4px;\n  font-weight: bold;\n  text-align: right;\n  color: ${({ color }) => color};\n`\nconst AttackType = styled(Type)`\n  text-align: center;\n`\n\nconst formatSize = (size) => {\n  return +((parseFloat(size.minimum, 10) + parseFloat(size.maximum, 10)) / 2)\n    .toFixed(2)\n    .toString()\n}\n\nconst PokemonContent = ({ isLoading, pokemon, prevPokemon, nextPokemon }) => {\n  if (isLoading) {\n    return (\n      <Wrapper>\n        <Loader />\n      </Wrapper>\n    )\n  }\n\n  const { light } = TYPES[pokemon.types[0]]\n\n  return (\n    <Wrapper border={light}>\n      <Header border={light}>\n        {prevPokemon ? (\n          <PrevPokemon to={`/${prevPokemon}`}>{prevPokemon}</PrevPokemon>\n        ) : (\n          <span />\n        )}\n        <h1>{pokemon.name}</h1>\n        <h4>{pokemon.classification}</h4>\n        {nextPokemon ? (\n          <NextPokemon to={`/${nextPokemon}`}>{nextPokemon}</NextPokemon>\n        ) : (\n          <span />\n        )}\n      </Header>\n      <Content>\n        <Id>{pokemon.id}</Id>\n        <Images>\n          <Image src={pokemon.image} alt={pokemon.name} />\n          {pokemon.evolutions &&\n            pokemon.evolutions.map((evolution) => (\n              <Evolution key={evolution.name}>\n                <EvolutionSeparator>></EvolutionSeparator>\n                <Link to={`/${evolution.name}`}>\n                  <EvolutionImage src={evolution.image} alt={evolution.name} />\n                </Link>\n              </Evolution>\n            ))}\n        </Images>\n\n        <div>\n          <div>\n            Weight: <strong>{formatSize(pokemon.weight)}kg</strong>\n          </div>\n          <div>\n            Height: <strong>{formatSize(pokemon.height)}m</strong>\n          </div>\n          <div>\n            Max CP: <strong>{pokemon.maxCP}</strong>\n          </div>\n          <div>\n            Max HP: <strong>{pokemon.maxHP}</strong>\n          </div>\n        </div>\n\n        <Stats>\n          <div>\n            <Types>\n              Types:\n              <TypeList>\n                {pokemon.types.map((type) => (\n                  <Type key={type} of={type} />\n                ))}\n              </TypeList>\n            </Types>\n\n            <Types>\n              Resistant:\n              <TypeList>\n                {pokemon.resistant.map((type) => (\n                  <Type key={type} of={type} />\n                ))}\n              </TypeList>\n            </Types>\n\n            <Types>\n              Weaknesses:\n              <TypeList>\n                {pokemon.weaknesses.map((type) => (\n                  <Type key={type} of={type} />\n                ))}\n              </TypeList>\n            </Types>\n          </div>\n\n          <Attacks>\n            <AttacksTitle>Attacks</AttacksTitle>\n            <tbody>\n              {[...pokemon.attacks.fast, ...pokemon.attacks.special].map(\n                (attack) => (\n                  <Attack key={attack.name}>\n                    <AttackName>{attack.name}</AttackName>\n                    <AttackDamage color={TYPES[attack.type].dark}>\n                      {attack.damage}\n                    </AttackDamage>\n                    <AttackType as=\"td\" of={attack.type} />\n                  </Attack>\n                ),\n              )}\n            </tbody>\n          </Attacks>\n        </Stats>\n      </Content>\n    </Wrapper>\n  )\n}\n\nPokemonContent.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  pokemon: PropTypes.object,\n  prevPokemon: PropTypes.string,\n  nextPokemon: PropTypes.string,\n}\nexport default PokemonContent\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport { Link } from 'react-router-dom'\nimport { useSpring, animated } from 'react-spring'\nimport styled from '@emotion/styled'\n\nimport PokemonContent from './Content'\n\nconst GET_POKEMON = gql`\n  query getPokemon($name: String) {\n    pokemon(name: $name) {\n      id\n      number\n      name\n      classification\n      maxCP\n      maxHP\n      image\n      evolutions {\n        id\n        name\n        image\n      }\n      weight {\n        minimum\n        maximum\n      }\n      height {\n        minimum\n        maximum\n      }\n      types\n      resistant\n      weaknesses\n      attacks {\n        fast {\n          name\n          type\n          damage\n        }\n        special {\n          name\n          type\n          damage\n        }\n      }\n    }\n  }\n`\n\nconst Backdrop = styled(animated(Link))`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.4);\n`\n\nconst Content = styled(animated.div)`\n  position: fixed;\n  top: 15%;\n  bottom: 0;\n  left: 50%;\n  width: 800px;\n`\n\nconst Pokemon = ({ pokemonNames, history, match }) => {\n  const backdropStyle = useSpring({ opacity: 1, from: { opacity: 0 } })\n  const contentStyle = useSpring({\n    to: { transform: 'translate(-50%, 0)' },\n    from: { transform: 'translate(-50%, 100%)' },\n  })\n\n  const { data, loading, refetching } = useQuery(GET_POKEMON, {\n    variables: { name: match.params.name },\n  })\n\n  let prevPokemon = null\n  let nextPokemon = null\n  if (data.pokemon) {\n    const pokemonIndex = parseInt(data.pokemon.number, 10) - 1\n    prevPokemon = pokemonNames[pokemonIndex - 1]\n    nextPokemon = pokemonNames[pokemonIndex + 1]\n  }\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden'\n\n    const keydown = (e) => {\n      if (e.keyCode === 27) history.push('/')\n      if (e.keyCode === 37 && prevPokemon) history.push(`/${prevPokemon}`)\n      if (e.keyCode === 39 && nextPokemon) history.push(`/${nextPokemon}`)\n    }\n    window.addEventListener('keydown', keydown)\n    return () => {\n      document.body.style.overflow = 'auto'\n      window.removeEventListener('keydown', keydown)\n    }\n  }, [prevPokemon, nextPokemon, history])\n\n  return (\n    <>\n      <Backdrop to=\"/\" style={backdropStyle} />\n      <Content style={contentStyle}>\n        <PokemonContent\n          isLoading={loading && !refetching}\n          pokemon={data.pokemon}\n          prevPokemon={prevPokemon}\n          nextPokemon={nextPokemon}\n        />\n      </Content>\n    </>\n  )\n}\n\nPokemon.propTypes = {\n  pokemonNames: PropTypes.arrayOf(PropTypes.string),\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n}\nexport default withRouter(Pokemon)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport { Link } from 'react-router-dom'\nimport { Route } from 'react-router-dom'\nimport styled from '@emotion/styled'\n\nimport Loader from '../Loader'\nimport Pokemon from '../Pokemon'\nimport Type, { TYPES } from '../Type'\n\nconst GET_POKEMONS = gql`\n  query getPokemons($first: Int!) {\n    pokemons(first: $first) {\n      id\n      number\n      name\n      maxCP\n      maxHP\n      image\n      types\n    }\n  }\n`\n\nconst Wrapper = styled.div()\n\nconst Title = styled.h1`\n  padding: 32px 0 48px;\n  text-align: center;\n`\n\nconst List = styled.div`\n  display: grid;\n  grid-template-columns: 33% 33% 33%;\n  grid-gap: 16px;\n  max-width: 1200px;\n  margin: 0 auto;\n`\n\nconst Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  border: 3px solid;\n  border-color: ${({ color1, color2 }) =>\n    `${color1} ${color2} ${color2} ${color1}`};\n  border-radius: 3px;\n  text-decoration: none;\n`\n\nconst Id = styled.div`\n  align-self: baseline;\n  font-size: 10px;\n`\n\nconst Image = styled.img`\n  height: 72px;\n  margin-right: 8px;\n`\n\nconst Name = styled.div`\n  margin-top: 8px;\n  font-size: 18px;\n  font-weight: bold;\n  color: ${({ color }) => color};\n`\n\nconst Stats = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin: 8px 0;\n`\n\nconst Types = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 50%;\n  margin: 8px 0;\n`\n\nconst MoreInfoLink = styled(Link)`\n  align-self: flex-end;\n  font-size: 14px;\n  color: ${({ color1 }) => color1};\n  transition: 200ms;\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${({ color2 }) => color2};\n  }\n`\n\nconst PokemonList = ({ match }) => {\n  const { data, loading, refetching } = useQuery(GET_POKEMONS, {\n    variables: { first: 151 },\n  })\n\n  if (loading && !refetching) return <Loader />\n\n  const pokemonNames = data.pokemons.map(({ name }) => name)\n  return (\n    <Wrapper>\n      <Title>Pokemon List</Title>\n      <List>\n        {data.pokemons.map((pokemon) => {\n          const type1 = TYPES[pokemon.types[0]]\n          const type2 = TYPES[pokemon.types[1]]\n            ? TYPES[pokemon.types[1]]\n            : type1\n\n          return (\n            <Item key={pokemon.name} color1={type1.light} color2={type2.light}>\n              <Id>{pokemon.id}</Id>\n              <Image src={pokemon.image} />\n              <Name color={type1.light}>\n                #{pokemon.number} {pokemon.name}\n              </Name>\n              <Stats>\n                <span>\n                  Max CP: <strong>{pokemon.maxCP}</strong>\n                </span>\n                <span>\n                  Max HP: <strong>{pokemon.maxHP}</strong>\n                </span>\n              </Stats>\n              <Types>\n                {pokemon.types.map((type) => (\n                  <Type key={type} of={type} />\n                ))}\n              </Types>\n              <MoreInfoLink\n                to={pokemon.name}\n                color1={type1.light}\n                color2={type1.dark}\n              >\n                More information\n              </MoreInfoLink>\n            </Item>\n          )\n        })}\n      </List>\n      <Route\n        path=\"/:name\"\n        render={(routeProps) => (\n          <Pokemon {...routeProps} pokemonNames={pokemonNames} />\n        )}\n      />\n    </Wrapper>\n  )\n}\n\nPokemonList.propTypes = {\n  match: PropTypes.object,\n}\nexport default PokemonList\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Global, css } from '@emotion/core'\n\nimport PokemonList from '../PokemonList'\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Global\n      styles={css`\n        html {\n          box-sizing: border-box;\n        }\n\n        *,\n        ::before,\n        ::after {\n          padding: 0;\n          margin: 0;\n          box-sizing: inherit;\n        }\n\n        html,\n        body,\n        #root {\n          height: 100%;\n        }\n\n        body {\n          font-family: sans-serif;\n          color: #222;\n        }\n      `}\n    />\n    <Route path=\"/\" component={PokemonList} />\n  </Router>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\n\nconst client = new ApolloClient({\n  uri: 'https://pokemon-samdavies.stylindex.now.sh',\n})\n\nrender(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}